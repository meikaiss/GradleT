import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def versionMajor = 2
def versionMinor = 1
def versionPatch = 3
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.android.gradle"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    signingConfigs {
        debug {
            storeFile file(debugMKeystoreFile)
            storePassword debugMKeystorePassword
            keyAlias debugMKeyAlias
            keyPassword debugMKeyPassword
        }

        release {
            storeFile file(releaseMKeystoreFile)
            storePassword releaseMKeystorePassword
            keyAlias releaseMKeyAlias
            keyPassword releaseMKeyPassword
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "build_type", "debug")
            resValue("string", "API_URL", "http://api.develop.com/")

        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "build_type", "release")
            resValue("string", "API_URL", "http://api.product.com/")

        }
    }

    productFlavors {
        app {

        }
        wandoujia {

        }
        "360" {

        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        println "****************************"
        println "variant: ${output.name}"
        println "flavor: ${variant.flavorName}"
        println "manifest:  ${output.processResources.manifestFile}"
        println "****************************"

        if(output.name.toLowerCase().contains("release")) {
            def buildTime = getBuildTime();
            def apkName = "${output.name}-${android.defaultConfig.versionName}-#${buildTime}.apk"
            def file = output.outputFile
            output.outputFile = new File(file.parent, apkName)
        }
    }

//    def file = variant.outputs
//    variant.outputs = new File(file.parent, file.name.replace(".apk", "-" + android.defaultConfig.versionName + ".apk"))

}

def getBuildTime() {
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd-HHmmss");
    return simpleDateFormat.format(new Date());
}
